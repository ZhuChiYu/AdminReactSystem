version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: admin-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-admin_system}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deploy/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - admin-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: admin-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - admin-network

  # 主应用
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: admin-app
    environment:
      # 数据库配置
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres123}@postgres:5432/${POSTGRES_DB:-admin_system}

      # Redis配置
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379

      # JWT配置
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-super-secret-refresh-key-change-in-production}

      # 应用配置
      NODE_ENV: production
      PORT: 3000

      # 文件上传配置
      UPLOAD_PATH: /app/uploads
      MAX_FILE_SIZE: 10485760

      # 邮件配置（可选）
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASS: ${SMTP_PASS:-}

      # 是否运行数据库种子
      RUN_SEED: ${RUN_SEED:-false}

    volumes:
      - uploads_data:/app/uploads
    ports:
      - "80:80"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - admin-network

volumes:
  postgres_data:
  redis_data:
  uploads_data:

networks:
  admin-network:
    driver: bridge
